services:
  carla:
    image: carlasim/carla:0.9.16
    gpus: all
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - DISPLAY=${DISPLAY}
    network_mode: host
    command: >-
      bash CarlaUE4.sh -world-port=2000 -resx=800 -resy=600 -quality-level=Low
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    healthcheck:
      test: ["CMD", "bash", "-c", "timeout 1 bash -c 'echo > /dev/tcp/127.0.0.1/2000' || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 6

  ros-sim:
    build:
      context: .
      dockerfile: Dockerfile.ros
    gpus: all
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - ROS_DOMAIN_ID=0
      - DISPLAY=${DISPLAY}
    network_mode: host
    depends_on:
      carla:
        condition: service_healthy
    volumes:
      - ./av_sim_core:/ros2_ws/src/av_sim_core:rw
      - ./saved_images:/ros2_ws/saved_images
      - ./models:/ros2_ws/models
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    stdin_open: true
    tty: true
    command: >-
      bash -c "echo 'Waiting for CARLA port...'; \
      for i in $(seq 1 30); do (echo > /dev/tcp/127.0.0.1/2000) && break || sleep 1; done; \
      # Start multiple Python nodes directly (background) then wait/attach: \
      python -m av_sim_core.spawn_actors & \
      python -m av_sim_core.sensor_fusion & \
      python -m av_sim_core.vision_detector & \
      python -m av_sim_core.pure_pursuit & \
      python -m av_sim_core.stop_controller & \
      wait"

volumes: {}

