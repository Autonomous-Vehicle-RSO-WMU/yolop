#############################################
# Lean ROS2 + CARLA client simulation image  #
# Focus: minimal size & faster rebuilds       #
#############################################

# Reuse prebuilt base image to skip ROS + heavy deps each build
ARG ROS_BASE_IMAGE=yolop:ros-base
FROM ${ROS_BASE_IMAGE} AS base

ENV DEBIAN_FRONTEND=noninteractive \
    TZ=UTC \
    ROS_DISTRO=humble \
    ROS_VERSION=2 \
    ROS_PYTHON_VERSION=3

## Base image already contains ROS + deps

# ML deps already in base layer for maximum caching

WORKDIR /ros2_ws
ENV ROS_WS=/ros2_ws
RUN mkdir -p src/av_sim_core
COPY av_sim_core/ src/av_sim_core/
# No colcon build: use PYTHONPATH to expose package directly.
ENV PYTHONPATH=/ros2_ws/src:$PYTHONPATH

FROM base AS runtime
ENV ROS_DISTRO=humble
WORKDIR /ros2_ws
COPY --from=base /ros2_ws/src /ros2_ws/src
ENV PYTHONPATH=/ros2_ws/src:$PYTHONPATH
RUN echo '#!/usr/bin/env bash\nset -e\nsource /opt/ros/$ROS_DISTRO/setup.bash\nMODEL_DIR=/ros2_ws/models\nWEIGHT=$MODEL_DIR/yolov8n.pt\nif [ ! -f "$WEIGHT" ]; then\n  echo "[entrypoint] Downloading YOLOv8n weights..."\n  mkdir -p "$MODEL_DIR"\n  curl -L -o "$WEIGHT" https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n.pt\nfi\nexec "$@"' > /entrypoint.sh && chmod +x /entrypoint.sh
ENV PYTHONUNBUFFERED=1
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]
EXPOSE 2000 2001 2002
LABEL org.opencontainers.image.source="https://github.com/Autonomous-Vehicle-RSO-WMU/yolop" \
      org.opencontainers.image.description="Lean ROS2 + CARLA client simulation (YOLO + control)" \
      org.opencontainers.image.licenses="MIT"
